# bootstrap a new Debian system from the current one,
# not copying anything privately changed
# see http://wiki.debian.org/Debootstrap
#
# usage:
#
# ./bootstrap [lenny|squeeze|wheezy|jessie] [armel|armhf]
#

# not yet well tested!

# default: same as we already have

case $(cat /etc/debian_version) in
	5.* ) VERSION=lenny ;;
	6.* ) VERSION=squeeze ;;
	7.* ) VERSION=wheezy ;;
	8.* ) VERSION=jessie ;;
	9.* ) VERSION=stretch ;;
	10.* ) VERSION=bullseye ;;
	11.* ) VERSION=buster ;;
	* ) VERSION="can't detect" ;;
esac

# user override

[ "$1" ] && VERSION="$1"

case "$VERSION" in
	lenny ) ARCH=armel;;
	squeeze ) ARCH=armel;;
	wheezy ) ARCH=armhf;;
	jessie ) ARCH=armhf;;
	stretch ) ARCH=armhf;;
	bullseye ) ARCH=armhf;;
	buster ) ARCH=armhf;;
	sid ) ARCH=armhf;;
	* ) echo "unknown $VERSION"; exit;;
esac

# user override

[ "$2" ] && ARCH="$2"

MY_CHROOT=/debian-$VERSION

echo "bootstrapping $VERSION/$ARCH to $MY_CHROOT"

[ -x /usr/sbin/debootstrap ] || apt-get install debootstrap

[ -r "$MY_CHROOT/etc/debian_version" ] || ( # unless already installed (rm the MY_CHROOT tree to force re-install)
mkdir -p "$MY_CHROOT"
cd /
debootstrap --arch "$ARCH" "$VERSION" "$MY_CHROOT" http://ftp.us.debian.org/debian
)

cd $MY_CHROOT || exit 1

echo "adding our GTA04 config for network setup"

cp /root/config.tgz ./root/config.tgz

tar xvzf ./root/config.tgz

echo "fix /etc/apt/sources.list for $VERSION"

sed -i s/lenny/new-version/g etc/apt/sources.list
sed -i s/wheezy/new-version/g etc/apt/sources.list
sed -i s/jessie/new-version/g etc/apt/sources.list
sed -i s/squeeze/new-version/g etc/apt/sources.list
sed -i s/new-version/$VERSION/g etc/apt/sources.list

#gunzip <./root/config.tgz >./root/config.tar &&
#tar uvf ./root/config.tar ./etc/apt/sources.list &&
#gzip <./root/config.tar >./root/config.tgz &&
#rm ./root/config.tar

chroot "$MY_CHROOT" /bin/bash <<'END'
echo "running commands to finalize install in chroot"
depmod -a
yes | dpkg --configure -a	# try to cleanup if previous attempt failed
apt-get update
apt-get upgrade
apt-get install -y sudo			# always nice to have...
apt-get install -y udev			# important
apt-get install -y dnsutils     # nslookup etc.
apt-get install -y openssh-server openssh-client    # remote access thorugh ssh
apt-get install -y sysvinit-core systemd-sysv-		# stay with sysvinit on Jessie
apt-get -y autoremove
apt-get -y autoclean
apt-get -y clean
echo "*** the following steps open a big security hole but make development easier ***"
echo "enabling root login over ssh - since we have no user accounts (yet)"
sed -i 's/PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config
sed -i 's/PermitEmptyPassword.*/PermitEmptyPasswords yes/g' /etc/ssh/sshd_config
echo "setting empty root password! Note: this is not the same as *no* password"
# created by "openssl passwd -1 -salt gta04" and empty password
sed -i 's/root:[^:]*:/root:$1$gta04$cSj3CStbjKc8aDWez77190:/g' /etc/shadow
END

sync

echo "bootstrapped rootfs $MY_CHROOT"
echo "you should boot on a device and run ./useful to install useful packages like ntp, openssh, X11, etc."
