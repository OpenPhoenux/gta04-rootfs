# make an SD suitable for the BeagleBoard
# run on eeePC
[ "$SERVER" ] || export SERVER=http://download.goldelico.com/ombeagle/trunk
[ "$DEV" ] || export DEV=/dev/sdb

umount ${DEV}1
umount ${DEV}2

## new based on http://omappedia.org/wiki/SD_Configuration#Script_to_partition.2Fformat_SDCards

#!/bin/sh
if [ ! "${DEV}" = "/dev/sda" ] ; then
	DRIVE=${DEV}
	if [ -b "$DRIVE" ] ; then
		dd if=/dev/zero of=$DRIVE bs=1024 count=1024
		SIZE=`fdisk -l $DRIVE | grep Disk | awk '{print $5}'`
		echo DISK SIZE - $SIZE bytes
		CYLINDERS=`expr $SIZE / 255 / 63 / 512`
		echo CYLINDERS - $CYLINDERS
		{
		echo ,9,0x0C,*
		echo ,,,-
		} | sfdisk -D -H 255 -S 63 -C $CYLINDERS $DRIVE
		mkfs.vfat -F 32 -n "boot" ${DRIVE}1
		mke2fs -j -L "rootfs" ${DRIVE}2

	fi 
fi

if false
then	# old

dd if=/dev/zero of=${DEV} bs=1024 count=1024

SIZE=$(fdisk -l ${DEV} | grep Disk | awk '{print $5}')
echo DISK SIZE - $SIZE bytes
CYLINDERS=$(expr $SIZE / 255 / 63 / 512)
#CYLINDERS=$(echo $SIZE/255/63/512 | bc)
echo CYLINDERS - $CYLINDERS

#fdisk ${DEV} >tmp <<END
#p
#q
#END
#CYLINDERS=$(( read DUMMY; read DUMMY; read A B C MB CAPACITY BYTES; expr $CAPACITY / 255 / 63 / 512 ) <tmp)

fdisk ${DEV} <<END
o
x
h
255
s
63
c
$CYLINDERS
r
o
p
n
p
1

+8M
t
c
a
1
p
n
p
2


p
w
q
END

# Create a filesystem on each partition :
mkfs.msdos -F 32 ${DEV}1 -n LABEL1
mkfs.ext3 -L LABEL2 ${DEV}2

fi

umount ${DEV}1
umount ${DEV}2

fsck.msdos -y ${DEV}1
fsck.ext3 -y ${DEV}2

mkdir -p /media/P1
mount ${DEV}1 /media/P1
mkdir -p /media/P2
mount ${DEV}2 /media/P2

wget $SERVER/MLO -O /media/P1/MLO	# must come first
wget $SERVER/u-boot.bin -O/media/P1/u-boot.bin
wget $SERVER/splash.rgb16 -O/media/P1/splash.rgb16
wget $SERVER/menu.rgb16 -O/media/P1/menu.rgb16
wget $SERVER/boot.scr -O/media/P1/boot.scr
wget $SERVER/uImage -O /media/P1/uImage

ls -l /media/P1
wget $SERVER/bootstrapped-rootfs.tbz -O - | (cd /media/P2 && tar xvjf - )
rm -rf /media/P2/boot/*
rm -rf /media/P2/lib/modules
wget $SERVER/modules.tgz -O - | (cd /media/P2 && tar xvzf - )
wget $SERVER/config.tgz -O - | (cd /media/P2 && tar xvzf - )

sync
df
umount ${DEV}1
rmdir /media/P1
umount ${DEV}2
rmdir /media/P2
